#!/bin/sh
cd ${0%/*} || exit 1 # run from this directory

# Source tutorial run functions
. $WM_PROJECT_DIR/bin/tools/RunFunctions



# Number of nodes and cores to use
nodes=1
cores=8
# Get the number of processors to run on from system/decomposeParDict
# nProc=$(getNumberOfProcessors)

# Run the solver (parallel)
# mpirun -np $(($nodes*$cores)) fastPisoSolver -parallel 2>&1 | tee log.fastPisoSolver
# mpirun -np $(($nodes*$cores)) pisoFoamTurbine -parallel 2>&1 | tee log.pisoFoamTurbine
mpirun -np $(($nodes*$cores)) pisoFoamTurbine -parallel 2>&1 | tee log.pisoFoamTurbine

# Post-Processing
# ensure that folder for first time step, 0, has the same fields as all other folder
# usually it does not, so easy way is to just copy fields from next time step into 0 folder


# reconstruct the parallel filess for all times, or for only specific times
# reconstructPar
# reconstructPar -fields '(U p nuSgs bodyForce)'
# reconstructPar -noZero
# reconstructPar -time '2,4'

# USAGE="
#       USAGE: $0 -n <NP> -f fields -o <OUTPUTFILE>
#         -f (fields) is optional, fields given in the form T,U,p; option is passed on to reconstructPar
#   -t (times) is optional, times given in the form tstart,tstop
#         -o (output) is optional 
# "
# parReconstructPar_v3 $0 -n 16
# ./parReconstructPar_v3 -n 16 -fields '(U p nuSgs bodyForce)'
# ./parReconstructPar_v3 -n $cores -fields '(U p nuSgs bodyForce)'
# for some reason the -fields options gives error such that no fields are created!
./parReconstructPar_v3 -n $cores

# ignore the 0 directory, it does not contain all the same fields
# as later times, so it easiest to post-process by ignoring it
# mv 0 0.unused

## compute additional fields, like vorticity
vorticity
Lambda2

## convert OpenFOAM format to VTK files
# foamToVTK
foamToVTK -noZero -fields '(U p nuSgs bodyForce vorticity Lambda2)'