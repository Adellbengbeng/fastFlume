/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.6                                   |
|   \\  /    A nd           | Web:      http://www.OpenFOAM.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

// further documentation of this file found at:
// http://www.openfoam.org/docs/user/blockMesh.php 

convertToMeters 1;

// original mesh from fastDuct
// Nx  250;      // Number of elements in x direction
// Ny  100;      // Number of elements in y direction
// Nz  100;      // Number of elements in z direction
// xi   0.0;      // Minimum x coordinate  
// xf  1000.0;      // Maximum x coordinate
// yi   -100.0;      // Minimum y coordinate
// yf   100.0;      // Maximum y coordinate
// zi   0.0;      // Minimum z coordinate
// zf   200.0;      // Maximum z coordinate

// modified mesh for lab scale
// xi   0.0;      // Minimum x coordinate
xi   3.0;      // Minimum x coordinate  
xf  12.3;      // Maximum x coordinate
yi   0.0;      // Minimum y coordinate
yf   1.0;      // Maximum y coordinate
zi   0.0;      // Minimum z coordinate
zf   0.8;      // Maximum z coordinate
// Nx   384;      // Number of elements in x direction
// Ny   64;      // Number of elements in y direction
// Nz    48;      // Number of elements in z direction

// Mesh=medium
Nx   698;      // Number of elements in x direction
Ny    75;      // Number of elements in y direction
Nz    60;      // Number of elements in z direction

vertices
(
    ($xi $yi $zi) //0
    ($xf $yi $zi) //1
    ($xf $yf $zi) //2
    ($xi $yf $zi) //3
    ($xi $yi $zf) //4
    ($xf $yi $zf) //5
    ($xf $yf $zf) //6
    ($xi $yf $zf) //7
);


blocks
(
    hex (0 1 2 3 4 5 6 7) ($Nx $Ny $Nz) simpleGrading (1 1 1)
);

edges
(
);

boundary
(

   bottom
   {
     // type cyclic;
     type wall;
     // type slip;           // gives error
     // type zeroGradient;   // gives error
      // type patch     // gives error
     neighbourPatch top;
     faces
     (
       (0 3 2 1)
     );
   }

   top
   {
     // type cyclic;
     type wall;    
     // type slip;           // gives error
     // type zeroGradient;   // gives error
      // type patch     
     neighbourPatch bottom;
     faces
     (
       (4 5 6 7)
     );
   }

   west
   {
     type inflow;
     faces
     (
       (0 4 7 3)
     );
   }

   east
   {
     type outflow;
     faces
     (
       (1 2 6 5)
     );
   }

   north
   {
     // type cyclic;
     type wall;    
     // type slip;           // gives error
     // type zeroGradient;   // gives error
      // type patch    
     neighbourPatch south;
     faces
     (
       (3 7 6 2)
     );
   }
  
   south
   {
     // type cyclic;
     type wall;    
     // type slip;           // gives error
     // type zeroGradient;   // gives error     
      // type patch
     neighbourPatch north;
     faces
     (
       (0 1 5 4)
     );
   }

);

mergePatchPairs
(
);

// ************************************************************************* //
